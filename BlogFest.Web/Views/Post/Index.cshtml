@using BlogFest.Application.Services.Content.Queries.DTOs;
@using System.Web;
@model PostPageDTO
@{
	Layout = "_ContentLayout";
}

@section Styles{
	<style>
		.reply-block {
			display: none;
		}

		.img-sm {
			width: 46px;
			height: 46px;
		}

		.media-block .media-left {
			display: block;
			float: left
		}

		.media-block .media-right {
			float: right
		}

		.media-block .media-body {
			display: block;
			overflow: hidden;
			width: auto
		}

		.middle .media-left,
		.middle .media-right,
		.middle .media-body {
			vertical-align: middle
		}

		.thumbnail {
			border-radius: 0;
			border-color: #e9e9e9
		}

		.tag.tag-sm, .btn-group-sm > .tag {
			padding: 5px 10px;
		}

		.tag:not(.label) {
			background-color: #fff;
			padding: 6px 12px;
			border-radius: 2px;
			border: 1px solid #cdd6e1;
			font-size: 12px;
			line-height: 1.42857;
			vertical-align: middle;
			-webkit-transition: all .15s;
			transition: all .15s;
		}

		.text-muted, a.text-muted:hover, a.text-muted:focus {
			color: #acacac;
		}

		.text-sm {
			font-size: 0.9em;
		}

		.text-5x, .text-4x, .text-5x, .text-2x, .text-lg, .text-sm, .text-xs {
			line-height: 1.25;
		}

		.btn-trans {
			background-color: transparent;
			border-color: transparent;
			color: #929292;
		}

		.btn-icon {
			padding-left: 9px;
			padding-right: 9px;
		}

			.btn-sm, .btn-group-sm > .btn, .btn-icon.btn-sm {
				padding: 5px 10px !important;
			}

		.mar-top {
			margin-top: 15px;
		}

		.content-container {
			max-width: 780px;
			margin: 0 auto;
		}
	</style>
}



<input id="PostId" name="PostId" type="hidden" value="@Model.Id" />

<div class="content-container">

	@if (!string.IsNullOrEmpty(Model.ImagePath))
	{
		<div class="text-center mb-4">
			<img src="\media\@Model.ImagePath" class="img-fluid">
		</div>
	}

	<div class="card">
		<div class="card-body">
			<div>
			</div>
			<div class="d-flex justify-content-between">
				<h3>
					@Model.Title
				</h3>

				<div class="file-loader">
				</div>
			</div>


			<div>
			
				@if (Model.Categories != null && Model.Categories.Count != 0)
				{
					@:Categories:
					foreach (var item in Model.Categories)
					{
						<a href="@Url.Action("Category", "Search", new{key = HttpUtility.UrlEncode(@item.Title)})"><span class="badge bg-secondary">@item.Title</span></a>
					}
				}
			</div>

			<div>
				@Html.Raw(Model.Content)
			</div>
			<div>
				created by <a href=@Url.Action("IndexByName", "User", new {name = "admin"})>
					@Model.CreatedByName
				</a>
			</div>

			<div class="text-end">
				<div class="reaction-wrapper">
					@await Component.InvokeAsync("PostReaction", new{id = Model.Id} )
				
				</div>
			</div>
		</div>
	</div>

	<section class="gradient-custom">
		<div class="container my-5 py-5">
			<div class="row d-flex justify-content-center mb-4">
				<input name="PostId" type="hidden" value="@Model.Id" />

				<div class="card">
					<div class="card-body">
						<form asp-action="CreateComment" id="CreateComment">
							<input name="PostId" type="hidden" value="@Model.Id" />
							<textarea class="form-control" rows="2" name="CommentContent" placeholder="What are you thinking?"></textarea>
							<div class="mar-top clearfix">
								<button class="btn btn-sm btn-primary pull-right comment-reply-js" type="submit"><i class="fa fa-pencil fa-fw"></i> Comment</button>
							</div>
						</form>
					</div>
				</div>

			</div>

			<div class="row d-flex justify-content-center">
				<div class="card">
					<div class="card-body p-4">
						<div class="row">
							<div class="col">
								<div class="comments-wrapper">
									<div class="comments">
										<input asp-for="Offset" type="hidden" />

										@if (Model.Comments != null)
										{
											@foreach (var item in Model.Comments)
											{

												<div class="card mb-4">
													<div class="card-body">
														<div class="d-flex flex-start mb-3">

															<img class="rounded-circle shadow-1-strong me-3"
																 src="\media\@item.Path" alt="avatar" width="65"
																 height="65" />
															<div class="flex-grow-1 flex-shrink-1">
																<div>
																	<div class="d-flex justify-content-between align-items-center">
																		<p class="mb-1">
																			<a href="@Url.Action("IndexByName","User", new {name = item.UserName})">@item.UserName</a>  <span class="small">- @item.DateCreated.ToString("dddd, dd MMMM yyyy")</span>
																		</p>
																	</div>
																	<p class="small mb-0">
																		@item.Content
																	</p>
																</div>
															</div>
														</div>
													</div>
												</div>
											}
										}
									</div>
									@if (Math.Ceiling((float)Model.CommentsCommonAmount / Model.Offset) > 1)
									{
										<div class="text-center">
											<a href="post-load" class="load-comments-js">
												Load more
											</a>
										</div>
									}

						
								</div>
								
							</div>

						</div>
					</div>

				</div>
			</div>
		</div>
	</section>

</div>
@section Scripts{
	<script>

		$(document).on('click', '.btn-dislike-post-js', function (e) {
			e.preventDefault();

			$.ajax({
				method: 'put',
				url: "@Url.Action("PutDislike")",
				data: {
					PostId: $('#PostId').val()
				},
				success: function (data) {
					debugger;
					if (data.result && data.htmlResult != undefined) {
						$('.reaction-wrapper').html(data.htmlResult);
					}
				}
			});
		});

		$(document).on('click', '.btn-like-post-js', function (e) {
			e.preventDefault();

			$.ajax({
				method: 'put',
				url: "@Url.Action("IncreaseLike")",
				data: {
					PostId: $('#PostId').val()
				},
				success: function (data) {
					if (data.result && data.htmlResult != undefined) {
						$('.reaction-wrapper').html(data.htmlResult);
					}
				}
			});
		});

		$(document).on('click', '.load-comments-js', function (e) {
			e.preventDefault();
			debugger;
			$.ajax({
				url: '@Url.Action("GetPostComments", new {postId = Model.Id})',
				method: 'get',
				data:{
					offset: $('#Offset').val()
				},
				success: function(data){
					$('.comments-wrapper').html(data);
				}
			});
		});


		$('#CreateComment').on('submit', function (e) {
			e.preventDefault();
			$.ajax({
				url: "@Url.Action("CreateComment")",
				data: $(this).serialize(),
				method: "post",
				success: function (data) {
					if (data.result) {
						alert("Comment has been created");
						window.location.href = "@Url.Action("GetBySlug", new {slug = Model.Slug})";
						return;
					}
					openDangerModal(data.error);
				},
				errors: function (data) {
					openDefaultDangerModal();
				}
			});
		});
	</script>
}